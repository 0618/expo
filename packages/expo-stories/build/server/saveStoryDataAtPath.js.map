{"version":3,"file":"saveStoryDataAtPath.js","sourceRoot":"","sources":["../../server/saveStoryDataAtPath.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport { IServerConfig, IStoryManifestItem } from '../types';\nimport { generateId } from './generateId';\nimport { getManifestFilePath, getStoryManifest } from './shared';\nimport { writeStoriesJSFile } from './writeStoriesJSFile';\n\nfunction saveStoryDataAtPath(config: IServerConfig, relPath: string) {\n  const { watchRoot } = config;\n  const fullPath = path.resolve(watchRoot, relPath);\n  const fileAsString = fs.readFileSync(fullPath, { encoding: 'utf-8' });\n\n  const manifestFilePath = getManifestFilePath(config);\n  const storyManifest = getStoryManifest(config);\n\n  const id = generateId(fullPath);\n  const acorn = require('acorn-loose');\n\n  const parsed = acorn.parse(fileAsString, {\n    ecmaVersion: 2020,\n    sourceType: 'module',\n  });\n\n  const title = relPath\n    .split('/')\n    .pop()\n    ?.replace('.stories.tsx', '');\n\n  const storyData: Pick<IStoryManifestItem, 'title' | 'stories'> = {\n    title: title || '',\n    stories: [],\n  };\n\n  parsed.body.forEach(node => {\n    if (node.type === 'ExportNamedDeclaration') {\n      if (node.declaration !== null) {\n        const { type } = node.declaration;\n        if (type === 'VariableDeclaration') {\n          node.declaration.declarations.forEach(d => {\n            const name = d.id.name;\n            storyData.stories.push({\n              name,\n              key: name,\n              id: `${id}_${name}`,\n            });\n          });\n        }\n\n        if (type === 'FunctionDeclaration') {\n          const name = node.declaration.id.name;\n          storyData.stories.push({\n            name,\n            key: name,\n            id: `${id}_${name}`,\n          });\n        }\n      }\n\n      if (node.specifiers.length > 0) {\n        node.specifiers.forEach(specifier => {\n          const name = specifier.exported.name;\n          if (!storyData.stories.includes(name)) {\n            storyData.stories.push({\n              name,\n              key: name,\n              id: `${id}_${name}`,\n            });\n          }\n        });\n      }\n    }\n  });\n\n  const defaultExport = parsed.body.find(node => node.type === 'ExportDefaultDeclaration');\n\n  if (defaultExport) {\n    defaultExport.declaration.properties.forEach(property => {\n      const key = property.key.name;\n      const value = property.value.value;\n\n      storyData[key] = value;\n    });\n  }\n\n  storyManifest.files[id] = {\n    id,\n    fullPath,\n    relativePath: relPath,\n  };\n\n  const cachedFile = storyManifest.files[id];\n\n  cachedFile.title = storyData.title;\n  cachedFile.stories = storyData.stories;\n\n  const storyManifestAsString = JSON.stringify(storyManifest, null, '\\t');\n\n  fs.writeFileSync(manifestFilePath, storyManifestAsString, {\n    encoding: 'utf-8',\n  });\n\n  writeStoriesJSFile(config);\n}\n\nexport { saveStoryDataAtPath };\n"]}