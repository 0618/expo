{"version":3,"file":"createFileWatcher.js","sourceRoot":"","sources":["../../server/createFileWatcher.ts"],"names":[],"mappings":";;;;;;AAAA,0CAAoB;AACpB,8CAAwB;AACxB,8CAAwB;AACxB,8CAAwB;AAGxB,2CAA0C;AAC1C,6DAA4D;AAC5D,mCAA6E;AAC7E,2DAA0D;AAE1D,SAAS,iBAAiB,CAAC,MAAqB,EAAE,MAAwB;IAChE,IAAA,SAAS,GAAK,MAAM,UAAX,CAAY;IAE7B,IAAM,OAAO,GAAG,cAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE;QACxD,GAAG,EAAE,SAAS;QACd,MAAM,EAAE,CAAC,oBAAoB,EAAE,WAAW,EAAE,eAAe,CAAC;KAC7D,CAAC,CAAC;IAEH,OAAO,CAAC,OAAO,CAAC,UAAA,OAAO;QACrB,yCAAmB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,IAAM,gBAAgB,GAAG,4BAAmB,CAAC,MAAM,CAAC,CAAC;IACrD,IAAM,aAAa,GAAG,yBAAgB,CAAC,MAAM,CAAC,CAAC;IAE/C,IAAM,OAAO,GAAG,cAAI,CAAC,SAAS,EAAE;QAC9B,IAAI,EAAE,CAAC,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,kBAAkB,CAAC;QACpF,OAAO,EAAE,CAAC,cAAc,CAAC;QACzB,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;IAEH,yDAAyD;IACzD,wDAAwD;IACxD,oCAAoC;IACpC,0CAA0C;IAC1C,6BAA6B;IAC7B,MAAM;IAEN,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,UAAA,OAAO;QACvB,yCAAmB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACrC,MAAM,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAS,OAAO;QACnC,IAAM,QAAQ,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAClD,IAAM,EAAE,GAAG,uBAAU,CAAC,QAAQ,CAAC,CAAC;QAEhC,OAAO,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAM,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAExE,YAAE,CAAC,aAAa,CAAC,gBAAgB,EAAE,qBAAqB,EAAE;YACxD,QAAQ,EAAE,OAAO;SAClB,CAAC,CAAC;QAEH,uCAAkB,CAAC,MAAM,CAAC,CAAC;QAC3B,MAAM,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE;QAClB,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,UAAU,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,SAAS,UAAU;QACjB,IAAM,OAAO,GAAG,mBAAU,CAAC,MAAM,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;IAC3B,CAAC;IAED,SAAS,OAAO;QACd,OAAO,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC;IAED,OAAO;QACL,OAAO,SAAA;KACR,CAAC;AACJ,CAAC;AAEQ,8CAAiB","sourcesContent":["import fs from 'fs';\nimport glob from 'glob';\nimport path from 'path';\nimport sane from 'sane';\n\nimport { IServerConfig, IStoryHttpServer } from '../types';\nimport { generateId } from './generateId';\nimport { saveStoryDataAtPath } from './saveStoryDataAtPath';\nimport { getManifestFilePath, getStories, getStoryManifest } from './shared';\nimport { writeStoriesJSFile } from './writeStoriesJSFile';\n\nfunction createFileWatcher(config: IServerConfig, server: IStoryHttpServer) {\n  const { watchRoot } = config;\n\n  const results = glob.sync('**/*.stories.{tsx,ts,js,jsx}', {\n    cwd: watchRoot,\n    ignore: ['**/node_modules/**', '**/ios/**', '**/android/**'],\n  });\n\n  results.forEach(relPath => {\n    saveStoryDataAtPath(config, relPath);\n  });\n\n  const manifestFilePath = getManifestFilePath(config);\n  const storyManifest = getStoryManifest(config);\n\n  const watcher = sane(watchRoot, {\n    glob: ['**/*.stories.tsx', '**/*.stories.js', '**/*.stories.ts', '**/*.stories.jsx'],\n    ignored: ['node_modules'],\n    watchman: true,\n  });\n\n  // require filepath shoul pick up on fast refresh changes\n  // any other changes would need to go through websockets\n  // watcher.on('change', relPath => {\n  //   saveStoryDataAtPath(config, relPath);\n  //   server.refreshClients();\n  // });\n\n  watcher.on('add', relPath => {\n    saveStoryDataAtPath(config, relPath);\n    server.refreshClients();\n  });\n\n  watcher.on('delete', function(relPath) {\n    const fullPath = path.resolve(watchRoot, relPath);\n    const id = generateId(fullPath);\n\n    delete storyManifest.files[id];\n    const storyManifestAsString = JSON.stringify(storyManifest, null, '\\t');\n\n    fs.writeFileSync(manifestFilePath, storyManifestAsString, {\n      encoding: 'utf-8',\n    });\n\n    writeStoriesJSFile(config);\n    server.refreshClients();\n  });\n\n  watcher.on('ready', () => {\n    server.start();\n    server.refreshClients();\n    logStories();\n  });\n\n  function logStories() {\n    const stories = getStories(config);\n    console.log('Stories found: \\n');\n    console.log({ stories });\n  }\n\n  function cleanup() {\n    watcher.close();\n  }\n\n  return {\n    cleanup,\n  };\n}\n\nexport { createFileWatcher };\n"]}