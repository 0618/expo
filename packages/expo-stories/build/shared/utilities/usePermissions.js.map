{"version":3,"file":"usePermissions.js","sourceRoot":"","sources":["../../../shared/utilities/usePermissions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA+B;AAE/B,SAAwB,cAAc,CACpC,mBAAwD;IAElD,IAAA,KAAwB,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAA5C,OAAO,QAAA,EAAE,UAAU,QAAyB,CAAC;IAEpD,KAAK,CAAC,SAAS,CAAC;QACd,SAAe,QAAQ;;;;;gCACJ,qBAAM,mBAAmB,EAAE,EAAA;;4BAAtC,QAAQ,GAAG,SAA2B;4BAC5C,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;;;;;SAC9B;QAED,QAAQ,EAAE,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CAAC,OAAO,CAAC,CAAC;AACnB,CAAC;AAfD,iCAeC","sourcesContent":["import * as React from 'react';\n\nexport default function usePermissions(\n  permissionRequester: () => Promise<{ granted: boolean }>\n): [boolean] {\n  const [granted, setGranted] = React.useState(false);\n\n  React.useEffect(() => {\n    async function askAsync() {\n      const response = await permissionRequester();\n      setGranted(response.granted);\n    }\n\n    askAsync();\n  }, []);\n\n  return [granted];\n}\n"]}